
//
// Super Boarding Party game definition file
//

@Main = 
[
    Name: "Super Boarding Party"
    DefaultClass: "func_door"
]

//
// worldspawn
//

@SolidClass = worldspawn : "World entity"
[
	message(string) : "Text on entering the world"
]

//
// base marker definitions
//

@baseclass = Targetname [ targetname(target_source) : "Name" ]
@baseclass = Target [ target(target_destination) : "Target" ]

@baseclass = Appearflags [
	spawnflags(Flags) =
	[
		0 : "Always" : 0
	]
]

//
// player starts, deathmatch, coop, teleport
//

@baseclass base(Appearflags) size(-16 -16 -32, 16 16 32) color(0 255 0) = PlayerClass []

@PointClass base(PlayerClass) = info_player_start : "Player start" []
@PointClass base(PlayerClass, Targetname) = info_teleport_destination : "Teleport destination" []

@PointClass = info_null : "info_null (target)"
[
	targetname(target_source) : "Name" 
]

//
// level load markers
//

@PointClass base(Targetname, Target) = info_streaming_level : "Streaming Level" [
	level(string) : "Level to load"
]

@PointClass base(Targetname) = info_landmark : "Streaming Level Landmark" []

//
// badasses
//

@baseclass base(Appearflags, Target, Targetname) color(220 0 0) = Monster 
[
	spawnflags(Flags) = 
	[
		1 : "Ambush" : 0
	]
]

@PointClass base(Monster) size(-16 -16 -24, 16 16 40) = monster_alien : "Alien" []

//
// lights
//

@baseclass color(255 255 0) = Light 
[
	light(integer) : "Brightness" : 200
	_color(color1) : "RGB Color"
	radius(integer): "Light Radius" : 15
	wait(string) : "Fade distance factor"
]

@PointClass size(-8 -8 -8, 8 8 8) base(Light, Target, Targetname) = light : "Invisible lightsource"
[
	spawnflags(Flags) = [ 1 : "Initially dark" : 0 ]
	style(Choices) : "Appearance" : 0 =
	[
		0 : "Normal"
		10: "Fluorescent flicker"
		2 : "Slow, strong pulse"
		11: "Slow pulse, noblack"
		5 : "Gentle pulse"
		1 : "Flicker A"
		6 : "Flicker B"
		3 : "Candle A"
		7 : "Candle B"
		8 : "Candle C"
		4 : "Fast strobe"
		9 : "Slow strobe"
	]
]

@PointClass size(-8 -8 -8, 8 8 8) base(Light, Target, Targetname) = light_directional : "Invisible lightsource"
[
	pitch(integer) : "Direction Pitch" : 45
	yaw(integer) : "Direction Yaw" : 25
]

// 
// moving things
//

@BaseClass base(Appearflags, Targetname) = Door
[
	wait(choices) : "Wait before close" : 3 =
	[
		-1: "Stays open"
	]
	dmg(integer) : "Damage when blocked" : 2
	sounds(choices) : "Sounds" : 2 =
	[
		0 : "No sound"
		1 : "Stone"
		2 : "Base"
		3 : "Stone Chain"
		4 : "Screechy Metal"
	]
	health(integer) : "Health (shoot open)"
	speed(integer) : "Speed" : 100
]

@SolidClass base(Door) = func_door : "Door"
[
	spawnflags(Flags) = 
	[
		1  : "start open" : 0
		4  : "dont link" : 0
		8  : "gold key" : 0
		16 : "silver key" : 0
		32 : "toggle" : 0
	]
	message(string) : "Touch message"
	lip(integer) : "Lip" : 8
]
@SolidClass base(Door) = func_door_secret : "Secret Door"
[
	spawnflags(Flags) = 
	[
		1 : "open once" : 0
		2 : "1st left" : 0
		4 : "1st down" : 0
		8 : "no shoot" : 0
		16 : "always shoot" : 0
	]
	t_width(integer) : "Movement width"
	t_length(integer) : "Movement length"
]

@SolidClass base(Appearflags, Targetname) = func_wall : "Moving wall" []

@SolidClass base(Appearflags, Targetname, Target) = func_button : "Button" 
[
	speed(integer) : "Speed" : 5
	health(integer) : "Health (shootable if > 0)"
	//sounds(choices) : "Sounds" : 1 = 
	//[
	//	1: "Steam metal"
	//	2: "Wooden clunk"
	//	3: "Metallic clink"
	//	4: "In-out"
	//]
	wait(choices) : "Delay before reset" : 3 =
	[
		-1: "Stays pressed"
	]
	delay(integer) : "Delay before trigger"
	//lip(integer) : "Lip" : 4
]

@SolidClass base(Appearflags, Targetname) = func_train : "Moving platform" 
[
	sounds(choices) : "Sound" : 1 =
	[
		0: "None"
		1: "Ratchet Metal"
	]
	speed(integer) : "Speed (units per second)" : 100
	target(target_source) : "First stop target"
	dmg(integer) : "Damage on crush" : 2
]

@PointClass base(Appearflags, Targetname) size(16 16 16) = path_corner : "Moving platform stop"
[
	target(target_source) : "Next stop target"
]

@SolidClass base(Appearflags, Targetname) = func_plat : "Elevator" 
[
	spawnflags(Flags) = 
	[
		1 : "low trigger" : 0
	]
	height(integer) : "Travel altitude"
	speed(integer) : "Speed" : 150
	//sounds(choices) : "Sound group" : 1 =
	//[
	//	0: "None"
	//	1: "Base fast"
	//	2: "Chain Slow"
	//]
]

@SolidClass base(Appearflags) = func_illusionary : "Solids can be walked through" []

//
// triggers
//

// @SolidClass base(Appearflags) = trigger_changelevel : "Level change trigger" 
// [
//	spawnflags(flags) = 
//	[ 
//		1 : "No Intermission" : 0 
//	]
//	map(string) : "Map name"	
//]

//@SolidClass base(Appearflags, Targetname, Target) = trigger_once : "Single trigger"
//[
//	spawnflags(flags) = 
//	[ 
//		1 : "No touch" : 0 
//	]
//	killtarget(string) : "KillTarget"
//        message(string) : "Message"
//	health(integer) : "Health"
//        sounds(choices) : "Sounds" : 1 =
//	[
//		0 : "none"
//		1 : "secret"
//		2 : "beep beep"
//		3 : "large switch"
//	]
//	delay(string) : "Delay before trigger"
//]

@PointClass base(Appearflags, Targetname, Target) color(128 128 128) = trigger_relay : "Relay trigger"
[
	killtarget(string) : "Kill Target"
	delay(integer) : "Time before triggering"
	message(string) : "Trigger message"
]

@SolidClass base(trigger_relay) = trigger_once : "Single fire trigger"
[
	spawnflags(Flags) =
	[
		4 : "Triggered" : 0
	]
]

@SolidClass base(trigger_once) = trigger_multiple : "Multiple fire trigger"
[
	spawnflags(Flags) =
	[
		1 : "Monster" : 0
		2 : "Not Player" : 0
	]
	wait(integer) : "Seconds between triggers" : 0
]
